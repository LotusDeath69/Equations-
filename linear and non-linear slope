import math
from sympy import *
from scipy.optimize import fsolve
import math

def slopeLinear(x1, y1, x2, y2):
    m = 0
    a = x1 - x2
    b = y1 - y2 
    if a != 0:
        m = b/a
    Yintercept = -m*x1 + y1
    if Yintercept == 0:
        print(f'y = {m}x')
    else:
        print(f'y = {m}x + {Yintercept}')

def slopeNonlinear(x1, y1, x2, y2, x3, y3):
    first_difference_1 = y2 - y1
    first_difference_2 = y3 - y2
    second_difference = first_difference_2 - first_difference_1

    a = second_difference/2

    b = Symbol('b')
    c = Symbol('c')
    equation = x1*b - y1 - a*x1**2 - c
    equation_2 = x2**b - y1 - a*x2**2 - c
    return equation, equation_2


    b, c = fsolve([equation, equation_2], (1, 1))
    print(b, C)

slopeNonlinear(1, 9, 2, 16, 3, 25)
    





#Quadratic Sequences:
# a = 1/2 second differences
#solve for b and c via substitution 

